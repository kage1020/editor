
/* Ensure each top-level node has relative positioning 
   so absolutely positioned placeholders work correctly */
.tiptap.ProseMirror > * {
  position: relative;
}

/* =====================
     CORE EDITOR STYLES
     ===================== */
.tiptap.ProseMirror {
  white-space: pre-wrap;
  outline: none;
  caret-color: rgb(98 41 255);
}

.dark .tiptap.ProseMirror {
  caret-color: rgb(122 82 255);
}

.tiptap.ProseMirror {

  /* Paragraph spacing */
}

.tiptap.ProseMirror p:not(:first-child) {
  font-size: 1rem;
  line-height: 1.6;
  font-weight: normal;
  margin-top: 20px;
}

.tiptap.ProseMirror {

  /* Selection styles */
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) ::selection {
  background-color: rgba(157, 138, 255, 0.2);
}

.dark .tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) ::selection {
  background-color: rgba(122, 82, 255, 0.2);
}

.tiptap.ProseMirror:not(.readonly):not(.ProseMirror-hideselection) .selection::selection {
  background: transparent;
}

.tiptap.ProseMirror .selection {
  display: inline;
  background-color: rgba(157, 138, 255, 0.2);
}

.dark .tiptap.ProseMirror .selection {
  background-color: rgba(122, 82, 255, 0.2);
}

.tiptap.ProseMirror {

  /* Selected node styles */
}

.tiptap.ProseMirror .ProseMirror-selectednode:not(img):not(pre):not(.react-renderer) {
  border-radius: 0.5rem;
  background-color: rgba(157, 138, 255, 0.2);
}

.dark .tiptap.ProseMirror .ProseMirror-selectednode:not(img):not(pre):not(.react-renderer) {
  background-color: rgba(122, 82, 255, 0.2);
}

.tiptap.ProseMirror .ProseMirror-hideselection {
  caret-color: transparent;
}

/* Resize cursor */
.tiptap.ProseMirror.resize-cursor {
  cursor: ew-resize;
  cursor: col-resize;
}

/* =====================
     TEXT DECORATION
     ===================== */
/* Text decoration inheritance for spans */
.tiptap.ProseMirror a span {
  text-decoration: underline;
}

.tiptap.ProseMirror s span {
  text-decoration: line-through;
}

.tiptap.ProseMirror u span {
  text-decoration: underline;
}

.tiptap.ProseMirror .tiptap-ai-insertion {
  color: rgb(84 0 229);
}

.dark .tiptap.ProseMirror .tiptap-ai-insertion {
  color: rgb(122 82 255);
}

/* =====================
     COLLABORATION
     ===================== */
.tiptap.ProseMirror .collaboration-carets__caret {
  border-right: 1px solid transparent;
  border-left: 1px solid transparent;
  pointer-events: none;
  margin-left: -1px;
  margin-right: -1px;
  position: relative;
  word-break: normal;
}

.tiptap.ProseMirror .collaboration-carets__label {
  color: rgb(34 35 37);
  border-radius: 0.25rem;
  border-bottom-left-radius: 0;
  font-size: 0.75rem;
  font-weight: 600;
  left: -1px;
  line-height: 1;
  padding: 0.125rem 0.375rem;
  position: absolute;
  top: -1.3em;
  user-select: none;
  white-space: nowrap;
}

.dark .tiptap.ProseMirror .collaboration-carets__label {
  color: rgb(32 32 34);
}

/* =====================
     EMOJI
     ===================== */
.tiptap.ProseMirror [data-type="emoji"] img {
  display: inline-block;
  width: 1.25em;
  height: 1.25em;
  cursor: text;
}

/* =====================
     LINKS
     ===================== */
.tiptap.ProseMirror a {
  color: rgb(98 41 255);
  text-decoration: underline;
}

.dark .tiptap.ProseMirror a {
  color: rgb(122 82 255);
}

/* =====================
     MENTION
     ===================== */
.tiptap.ProseMirror [data-type="mention"] {
  display: inline-block;
  color: rgb(98 41 255);
}

.dark .tiptap.ProseMirror [data-type="mention"] {
  color: rgb(122 82 255);
}

/* =====================
     THREADS
     ===================== */
/* Base styles for inline threads */
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline {
  transition:
    color 0.2s ease-in-out,
    background-color 0.2s ease-in-out;
  color: rgb(34 35 37);
  border-bottom: 2px dashed hsl(52, 100%, 50%);
  font-weight: 600;
}

.dark .tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline {
  color: rgb(245 245 245);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--selected,
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--hovered {
  background-color: hsl(50, 100%, 77%);
  border-bottom-color: transparent;
}

.dark .tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--selected,
.dark .tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--inline.tiptap-thread--hovered {
  background-color: hsl(52, 100%, 32%);
}

/* Block thread styles with images */
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img) {
  outline: 0.125rem solid hsl(52, 100%, 50%);
  border-radius: 0.25rem;
  overflow: hidden;
  width: fit-content;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img).tiptap-thread--selected {
  outline-width: 0.25rem;
  outline-color: hsl(52, 100%, 50%);
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:has(img).tiptap-thread--hovered {
  outline-width: 0.25rem;
}

/* Block thread styles without images */
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)) {
  border-radius: 0.25rem;
  border-bottom: 0.125rem dashed hsl(52, 100%, 50%);
  padding-bottom: 0.5rem;
  outline: 0.25rem solid transparent;
}

.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)).tiptap-thread--hovered,
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--unresolved.tiptap-thread--block:not(:has(img)).tiptap-thread--selected {
  background-color: hsl(52, 100%, 50%);
  outline-color: hsl(52, 100%, 50%);
}

/* Resolved thread styles */
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--resolved.tiptap-thread--inline.tiptap-thread--selected {
  background-color: hsl(52, 100%, 50%);
  border-color: transparent;
  opacity: 0.5;
}

/* React renderer specific styles */
.tiptap.ProseMirror .tiptap-thread.tiptap-thread--block:has(.react-renderer) {
  margin-top: 3rem;
  margin-bottom: 3rem;
}

/* =====================
     PLACEHOLDER
     ===================== */
.is-empty:not(.with-slash)[data-placeholder]:has(
    > .ProseMirror-trailingBreak:only-child
  )::before {
  content: attr(data-placeholder);
}

.is-empty.with-slash[data-placeholder]:has(
    > .ProseMirror-trailingBreak:only-child
  )::before {
  content: "Write, type '/' for commandsâ€¦";
  font-style: italic;
}

.is-empty[data-placeholder]:has(
    > .ProseMirror-trailingBreak:only-child
  ):before {
  pointer-events: none;
  height: 0;
  position: absolute;
  width: 100%;
  text-align: inherit;
  left: 0;
  right: 0;
}

.is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak):before {
  color: rgba(40, 44, 51, 0.42);
}

.dark .is-empty[data-placeholder]:has(> .ProseMirror-trailingBreak):before {
  color: rgba(244, 244, 255, 0.37);
}

/* =====================
     DROPCURSOR
     ===================== */
.prosemirror-dropcursor-block,
.prosemirror-dropcursor-inline {
  background: rgb(122 82 255) !important;
  border-radius: 0.25rem;
  margin-left: -1px;
  margin-right: -1px;
  width: 100%;
  height: 0.188rem;
  cursor: grabbing;
}
